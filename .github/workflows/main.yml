# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Do Something with env files
      env:
        ENV_FILE_TUDAL_ADMIN: ${{ secrets.ENV_FILE_TUDAL_ADMIN }}
      run: |
        echo $ENV_FILE_TUDAL_ADMIN | base64 --decode > .env    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - name: scp by pem file
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST_TUDAL_ADMIN }}
        port: 22
        username: sbcn
        key: ${{ secrets.INNOFIN_USER_PEM }}
        source: "build/*"
        strip_components: 1
        target: "~/www/"
    - name: executing remote ssh commands by pem file
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_TUDAL_ADMIN }}
        port: 22
        username: sbcn
        key: ${{ secrets.INNOFIN_USER_PEM }}
        script: |
          sudo systemctl restart nginx
    - name: Send custom JSON data to Slack workflow
      id: slack
      uses: slackapi/slack-github-action@v1.23.0
      with:
        # This data can be any valid JSON from a previous step in the GitHub Action
        payload: |
          {
            "message": "${{ job.status }}",
            "url": "${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
            "repo_name": "${{ github.repository }}"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}          
