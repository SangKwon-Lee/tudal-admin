{"version":3,"sources":["pages/dashboard/HiddenboxList.tsx"],"names":["HiddenboxList","isMountedRef","useIsMountedRef","settings","useSettings","useState","hiddenboxes","setHiddenboxes","useEffect","gtm","push","event","getHiddenboxes","useCallback","a","reload","console","log","current","axios","get","response","data","error","sx","backgroundColor","minHeight","py","maxWidth","compact","container","justifyContent","spacing","item","color","variant","aria-label","separator","fontSize","mt","component","RouterLink","to","m","startIcon"],"mappings":"iWAwIeA,UAhHW,WACxB,IAAMC,EAAeC,cACbC,EAAaC,cAAbD,SACR,EAAsCE,mBAAsB,IAA5D,mBAAOC,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACRC,IAAIC,KAAK,CAAEC,MAAO,gBACjB,IAEH,IAAMC,EAAiBC,sBAAW,sBAAC,0CAAAC,EAAA,6DAAOC,EAAP,gCACjCC,QAAQC,IAAI,eAAgBhB,EAAaiB,SADR,kBAGRC,IAAMC,IAAN,kDAHQ,OAGzBC,EAHyB,OAI/BL,QAAQC,IAAII,EAASC,OACjBrB,EAAaiB,SAAWH,IAC1BR,EAAec,EAASC,MANK,kDAS/BN,QAAQO,MAAR,MAT+B,0DAWhC,CAACtB,IAEJO,qBAAU,WACRQ,QAAQC,IAAI,6BACZL,MACC,CAACA,IAMJ,OACE,qCACE,cAAC,IAAD,UACE,8EAEF,cAAC,IAAD,CACEY,GAAI,CACFC,gBAAiB,qBACjBC,UAAW,OACXC,GAAI,GAJR,SAOE,eAAC,IAAD,CAAWC,WAAUzB,EAAS0B,SAAU,KAAxC,UACE,eAAC,IAAD,CACEC,WAAS,EACTC,eAAe,gBACfC,QAAS,EAHX,UAKE,eAAC,IAAD,CAAMC,MAAI,EAAV,UACE,cAAC,IAAD,CACEC,MAAM,cACNC,QAAQ,KAFV,4BAMA,eAAC,IAAD,CACEC,aAAW,aACXC,UAAW,cAAC,IAAD,CAAkBC,SAAS,UACtCd,GAAI,CAAEe,GAAI,GAHZ,UAKE,cAAC,IAAD,CACEL,MAAM,cACNM,UAAWC,IACXC,GAAG,aACHP,QAAQ,YAJV,sCAQA,cAAC,IAAD,CACED,MAAM,cACNM,UAAWC,IACXC,GAAG,aACHP,QAAQ,YAJV,4CAQA,cAAC,IAAD,CACED,MAAM,gBACNC,QAAQ,YAFV,4CAQJ,cAAC,IAAD,CAAMF,MAAI,EAAV,SACE,cAAC,IAAD,CAAKT,GAAI,CAAEmB,GAAI,GAAf,SACE,cAAC,IAAD,CACET,MAAM,UACNU,UAAW,cAAC,IAAD,CAAUN,SAAS,UAC9Bd,GAAI,CAAEmB,EAAG,GACTR,QAAQ,YACRK,UAAWC,IACXC,GAAG,6BANL,0DAaN,cAAC,IAAD,CAAKlB,GAAI,CAAEe,GAAI,GAAf,SACE,cAAC,IAAD,CACEjC,YAAaA,EACbS,OA5EG,WACbH","file":"static/js/16.7180d747.chunk.js","sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport type { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  Box,\n  Breadcrumbs,\n  Button,\n  Container,\n  Grid,\n  Link,\n  Typography\n} from '@material-ui/core';\nimport { HiddenboxListTable } from '../../components/dashboard/hiddenbox';\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\nimport ChevronRightIcon from '../../icons/ChevronRight';\nimport DownloadIcon from '../../icons/Download';\nimport PlusIcon from '../../icons/Plus';\nimport UploadIcon from '../../icons/Upload';\nimport useSettings from '../../hooks/useSettings';\nimport gtm from '../../lib/gtm';\nimport type { Hiddenbox } from '../../types/hiddenbox';\nimport axios from '../../lib/axios';\n\nconst HiddenboxList: FC = () => {\n  const isMountedRef = useIsMountedRef();\n  const { settings } = useSettings();\n  const [hiddenboxes, setHiddenboxes] = useState<Hiddenbox[]>([]);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const getHiddenboxes = useCallback(async (reload=false) => {\n    console.log(\"isMountedRef\", isMountedRef.current)\n    try {\n      const response = await axios.get<Hiddenbox[]>(`/hiddenboxes?isDeleted=0&_sort=created_at:DESC`);\n      console.log(response.data)\n      if (isMountedRef.current || reload) {\n        setHiddenboxes(response.data);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    console.log(\"useEffect, getHiddenboxes\")\n    getHiddenboxes();\n  }, [getHiddenboxes]);\n\n  const reload = () => {\n    getHiddenboxes();\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Hiddenbox List | TUDAL Admin</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                Hiddenbox List\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  대시보드\n                </Link>\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  컨텐츠관리\n                </Link>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  히든박스\n                </Typography>\n              </Breadcrumbs>\n            </Grid>\n            <Grid item>\n              <Box sx={{ m: -1 }}>\n                <Button\n                  color=\"primary\"\n                  startIcon={<PlusIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                  variant=\"contained\"\n                  component={RouterLink}\n                  to=\"/dashboard/hiddenboxes/new\"\n                >\n                  히든박스 추가\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n          <Box sx={{ mt: 3 }}>\n            <HiddenboxListTable\n              hiddenboxes={hiddenboxes}\n              reload={reload}\n            />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default HiddenboxList;\n"],"sourceRoot":""}