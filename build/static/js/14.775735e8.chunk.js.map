{"version":3,"sources":["pages/dashboard/HiddenboxDetails.tsx"],"names":["tabs","label","value","HiddenboxDetails","isMountedRef","useIsMountedRef","settings","useSettings","useState","hiddenbox","setHiddenbox","currentTab","setCurrentTab","hiddenboxId","useParams","useEffect","gtm","push","event","getHiddenbox","useCallback","a","axios","get","response","console","log","data","current","error","sx","backgroundColor","minHeight","py","maxWidth","compact","container","justifyContent","spacing","item","color","variant","title","aria-label","separator","fontSize","mt","component","RouterLink","to","m","startIcon","indicatorColor","onChange","scrollButtons","textColor","map","tab","lg","md","xl","xs"],"mappings":"sYA2BMA,EAAO,CACX,CAAEC,MAAO,2BAAQC,MAAO,WACxB,CAAED,MAAO,2BAAQC,MAAO,aAwJXC,UArJc,WAC3B,IAAMC,EAAeC,cACbC,EAAaC,cAAbD,SACR,EAAkCE,mBAA2B,MAA7D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAiB,WAArD,mBAAOG,EAAP,KAAmBC,EAAnB,KACQC,EAAgBC,cAAhBD,YAERE,qBAAU,WACRC,IAAIC,KAAK,CAAEC,MAAO,gBACjB,IAEH,IAAMC,EAAeC,sBAAW,sBAAC,4BAAAC,EAAA,+EAENC,IAAMC,IAAN,uBAAqCV,IAF/B,OAEvBW,EAFuB,OAG7BC,QAAQC,IAAI,mBAAoBF,EAASG,MACrCvB,EAAawB,SACflB,EAAac,EAASG,MALK,gDAQ7BF,QAAQI,MAAR,MAR6B,yDAU9B,CAACzB,IAEJW,qBAAU,WACRI,MACC,CAACA,IAMJ,OAAKV,EAKH,qCACE,cAAC,IAAD,UACE,iFAEF,cAAC,IAAD,CACEqB,GAAI,CACFC,gBAAiB,qBACjBC,UAAW,OACXC,GAAI,GAJR,SAOE,eAAC,IAAD,CAAWC,WAAU5B,EAAS6B,SAAU,KAAxC,UACE,eAAC,IAAD,CACEC,WAAS,EACTC,eAAe,gBACfC,QAAS,EAHX,UAKE,eAAC,IAAD,CAAMC,MAAI,EAAV,UACE,cAAC,IAAD,CACEC,MAAM,cACNC,QAAQ,KAFV,SAIGhC,EAAUiC,QAEb,eAAC,IAAD,CACEC,aAAW,aACXC,UAAW,cAAC,IAAD,CAAkBC,SAAS,UACtCf,GAAI,CAAEgB,GAAI,GAHZ,UAKE,cAAC,IAAD,CACEN,MAAM,cACNO,UAAWC,IACXC,GAAG,aACHR,QAAQ,YAJV,sCAQA,cAAC,IAAD,CACED,MAAM,cACNO,UAAWC,IACXC,GAAG,aACHR,QAAQ,YAJV,4CAQA,cAAC,IAAD,CACED,MAAM,gBACNC,QAAQ,YAFV,4CAQJ,cAAC,IAAD,CAAMF,MAAI,EAAV,SACE,cAAC,IAAD,CAAKT,GAAI,CAAEoB,GAAI,GAAf,SACE,cAAC,IAAD,CACEV,MAAM,UACNO,UAAWC,IACXG,UAAW,cAAC,IAAD,CAAeN,SAAS,UACnCf,GAAI,CAAEoB,EAAG,GACTD,GAAE,iCAA4BpC,EAA5B,SACF4B,QAAQ,YANV,iCAaN,cAAC,IAAD,CAAKX,GAAI,CAAEgB,GAAI,GAAf,SACE,cAAC,IAAD,CACEM,eAAe,UACfC,SAhFa,SAACnC,EAAwBhB,GAChDU,EAAcV,IAgFJoD,cAAc,OACdC,UAAU,UACVrD,MAAOS,EACP8B,QAAQ,aANV,SAQGzC,EAAKwD,KAAI,SAACC,GAAD,OACR,cAAC,IAAD,CAEExD,MAAOwD,EAAIxD,MACXC,MAAOuD,EAAIvD,OAFNuD,EAAIvD,cAOjB,cAAC,IAAD,IACA,cAAC,IAAD,CAAK4B,GAAI,CAAEgB,GAAI,GAAf,SACkB,YAAfnC,GACC,cAAC,IAAD,CACEyB,WAAS,EACTE,QAAS,EAFX,SAIE,cAAC,IAAD,CACEC,MAAI,EACJmB,GAAIpD,EAAS6B,QAAU,GAAK,EAC5BwB,GAAI,GACJC,GAAItD,EAAS6B,QAAU,GAAK,EAC5B0B,GAAI,GALN,SAOE,cAAC,IAAD,CAAyBpD,UAAWA,kBAxG3C","file":"static/js/14.775735e8.chunk.js","sourcesContent":["import { useCallback, useState, useEffect } from 'react';\nimport type { FC, ChangeEvent } from 'react';\nimport { Link as RouterLink, useParams } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  Box,\n  Breadcrumbs,\n  Button,\n  Container,\n  Divider,\n  Grid,\n  Link,\n  Tab,\n  Tabs,\n  Typography\n} from '@material-ui/core';\nimport {\n  HiddenboxProductDetails,\n} from '../../components/dashboard/hiddenbox';\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\nimport ChevronRightIcon from '../../icons/ChevronRight';\nimport PencilAltIcon from '../../icons/PencilAlt';\nimport gtm from '../../lib/gtm';\nimport type { Hiddenbox } from '../../types/hiddenbox';\nimport axios from '../../lib/axios';\nimport useSettings from '../../hooks/useSettings';\n\nconst tabs = [\n  { label: '상품내용', value: 'details' },\n  { label: '구매내역', value: 'payments' },\n];\n\nconst HiddenboxDetails: FC = () => {\n  const isMountedRef = useIsMountedRef();\n  const { settings } = useSettings();\n  const [hiddenbox, setHiddenbox] = useState<Hiddenbox | null>(null);\n  const [currentTab, setCurrentTab] = useState<string>('details');\n  const { hiddenboxId } = useParams();\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const getHiddenbox = useCallback(async () => {\n    try {\n      const response = await axios.get<Hiddenbox>(`/hiddenboxes/${hiddenboxId}`);\n      console.log(\"[HiddenboxDetail\", response.data);\n      if (isMountedRef.current) {\n        setHiddenbox(response.data);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getHiddenbox();\n  }, [getHiddenbox]);\n\n  const handleTabsChange = (event: ChangeEvent<{}>, value: string): void => {\n    setCurrentTab(value);\n  };\n\n  if (!hiddenbox) {\n    return null;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Hiddenbox Details | TUDAL Admin</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                {hiddenbox.title}\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  대시보드\n                </Link>\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  컨텐츠관리\n                </Link>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  히든박스\n                </Typography>\n              </Breadcrumbs>\n            </Grid>\n            <Grid item>\n              <Box sx={{ m: -1 }}>\n                <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  startIcon={<PencilAltIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                  to={`/dashboard/hiddenboxes/${hiddenboxId}/edit`}\n                  variant=\"contained\"\n                >\n                  편집\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n          <Box sx={{ mt: 3 }}>\n            <Tabs\n              indicatorColor=\"primary\"\n              onChange={handleTabsChange}\n              scrollButtons=\"auto\"\n              textColor=\"primary\"\n              value={currentTab}\n              variant=\"scrollable\"\n            >\n              {tabs.map((tab) => (\n                <Tab\n                  key={tab.value}\n                  label={tab.label}\n                  value={tab.value}\n                />\n              ))}\n            </Tabs>\n          </Box>\n          <Divider />\n          <Box sx={{ mt: 3 }}>\n            {currentTab === 'details' && (\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  lg={settings.compact ? 12 : 8}\n                  md={12}\n                  xl={settings.compact ? 12 : 8}\n                  xs={12}\n                >\n                  <HiddenboxProductDetails hiddenbox={hiddenbox} />\n                </Grid>\n              </Grid>\n            )}\n            {/* {currentTab === 'invoices' && <HiddenboxInvoices />}\n            {currentTab === 'logs' && <HiddenboxLogs />} */}\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default HiddenboxDetails;\n"],"sourceRoot":""}